1. In the below elements which of them are values or an expression? eg:- values can be integer or string and expressions will be mathematical operators.
    *
    &#39;hello&#39;
    -87.8
    -
    /
    +
    6

Answer: values:       &#39;hello&#39;  , -87.8  , 6
        expressions:  * , - , / , + 


2. What is the difference between string and variable?

Answer: A *Variable* in python is the basic unit of storage in the program. It is a name that points to a specific memory location on the disk which holds a certain value. The location/value to which the variable points can change during the running of the code. In python, the data type which a variable can hold is not fixed, hence a variable name can point to any type of data during the operation of the code. On change of value, the variable is made to point to a different memory location which holds the new value isntead of the rewriting/updating the value on the original memory location.
        A *String* is a specific type of object or a data type that holds a sequence of charachters. This sequence is indexed and is an iterable. A string is immutable i.e. the value of a string cannot be changed. A string object comes with a set of designated string methods that can operate on the string.
        
        
3. Describe three different data types.

Answer: Three different datatypes are as follows-
    * Int() : Int dataype refers to integer. It is a whole number numeric value that can hold both positive and negative numbers. Int values can be operated upon by mathematical operators like +,-,*,/,// and %
    * Str() : Str refers to string data type, which holds an immutable indexed sequencs of charachters and comes with a set of string functions. Certain mathematical operators can operate on string objects, however they perform string operations.
    * Bool(): Bool stands for boolean data type and points to only binary values- 'True' and 'False'. This can translate to 1 and 0. Conditional statements in python by default return boolean values.


4. What is an expression made up of? What do all expressions do?

Answer: An expression is basically a logical sequence of operators and operands, arranged in a pre-defined syntax which is understandable by the interpreter and can be computed to return a value. Expressions could be mathematical, conditional, string or of any other type. When there are multiple operators in an expression, the 'operator precedence' decides which operator will be operated first.


5. This assignment statements, like spam = 10. What is the difference between an expression and a statement?

Answer: An expression always returns a value, while a statement is a complete syntactically correct line of code which doesnot return a value but contains logic flow of the program.


6. After running the following code, what does the variable bacon contain?
bacon = 22
bacon + 1

Answer: 23


7. What should the values of the following two terms be?
&#39;spam&#39; + &#39;spamspam&#39;
&#39;spam&#39; * 3

Answer: 


8. Why is eggs a valid variable name while 100 is invalid?

Answer: a variable is understood by the interpreter as a sequence of charachters not enclosed within quotations, while a sequence of unenclosed numbers is interpreted as an int (or a float). The rules of naming a variable makes sure that the python interpreter can identify components of the code from each other and hence, variable names canot be a number, nor can they begin with a number. Additionally, reserved special characters (like operators) cannot be part of the variable name as they are interpreted as operators.


9. What three functions can be used to get the integer, floating-point number, or string version of a value?

Answer: Int(), float(), str()


10. Why does this expression cause an error? How can you fix it?
&#39;I have eaten &#39; + 99 + &#39; burritos.&#39;

Answer: Invalid use of special charachters, operators, strings and integers in the same expression is the cause. Essentially, this expression makes no sense to the interpreter: charachters like &, + are operators. # is a special charachter that indicates the beginning of a comment. Similarly, charachter sequence unenclosed in quotations are interpreted as variable names (which cannot start with numbers or special charachters).
    This statement can be fixed by enclosing the entire statement within quotes ('," or ''')
